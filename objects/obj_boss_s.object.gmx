<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_boss_s</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>self</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>state = e_state.idle;
vsp = 0;
hsp = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>switch(state)
{
   case e_state.idle:
   {
      hsp = 0;
      vsp = (min(7, vsp+random(0.10)));
      if(distance_to_object(obj_player) &lt; 190) state = e_state.chase;
   }
   break;
   case e_state.chase:
   {
     dir = sign(obj_player.x - x);
     hsp = dir * random(2);
     vsp = (min(7, vsp+random(0.15)));
     if(distance_to_object(obj_player) &gt;250) state = e_state.idle;
   }
   break;
}

//Horizontal Collision
if (place_meeting(x+hsp,y,obj_wall))
{
    while(!place_meeting(x+sign(hsp),y,obj_wall)) //sign return +1 y hsp is positive or -1 if it's negative
    {
        x += sign(hsp);
    }
    hsp = 0;
    
}
x += hsp;

//Vertical Collision
if (place_meeting(x,y+vsp,obj_wall))
{
    while(!place_meeting(x,y+sign(vsp),obj_wall))
    {
        y += sign(vsp);
    }
    vsp = 0;

}
y += vsp;

//Enemy Collision
if (place_meeting(x,y,obj_player))
{
    if (obj_player.y &lt; y-16)
    {
        with (obj_player) vsp = -jumpspeed;
        global.points += 750;
        if (global.Sound) audio_play_sound(snd_kill, 0, false);
        instance_destroy();
        global.boss -= 1;
        if(instance_number(obj_boss_s)==0)&amp;(instance_number(obj_boss)==0){
          instance_create(850, 50, obj_portal);
        }
    }
    else
    {
        global.live -= 1;
        if(global.live==0){
          instance_create(0,0,obj_gameover);
        }
        scr_death(); //When we die, the script will be called
        
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
